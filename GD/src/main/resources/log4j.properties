# 设置
# 第一个参数debug这里是日志的级别
# 后面的则是appender每个日志文件
log4j.rootLogger = debug,stdout,D,log

# 控制台输出
# Target则是输出设备
# layout日志布局
# ConversionPattern日志输出的格式
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n

# 每天产生一个日志文件 DEBUG级别
log4j.appender.log=org.apache.log4j.DailyRollingFileAppender
# 设置文件输出路径，文本文件
log4j.appender.log.file={catalina.base}/logs/log
# 设置每天生成日志文件
# 当天生成的是log文件，第二天将会把前一天的log改成log_当天日期.log
log4j.appender.log.DatePattern='_'yyyy-MM-dd'.log '
# 追加 设置true则在原来的log文件中追加 false覆盖原来的log文件
log4j.appender.D.Append = true
# 设置当前log文件的日志级别
# 最高允许root下设置的级别
log4j.appender.D.Threshold = DEBUG
# 日志文件的布局
log4j.appender.log.layout=org.apache.log4j.PatternLayout
# 日志文件的输出格式
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n